// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(sel=address[3..5],in=load,a=load1,b=load2,c=load3,d=load4,e=load5,f=load6,g=load7,h=load8);
    RAM8(address=address[0..2],in=in,load=load1,out=a);
    RAM8(address=address[0..2],in=in,load=load2,out=b);
    RAM8(address=address[0..2],in=in,load=load3,out=c);
    RAM8(address=address[0..2],in=in,load=load4,out=d);
    RAM8(address=address[0..2],in=in,load=load5,out=e);
    RAM8(address=address[0..2],in=in,load=load6,out=f);
    RAM8(address=address[0..2],in=in,load=load7,out=g);
    RAM8(address=address[0..2],in=in,load=load8,out=h);
    Mux8Way16(a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h,out=out,sel=address[3..5]);
}
